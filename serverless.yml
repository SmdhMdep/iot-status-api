service: streamingStatusApi
frameworkVersion: "3"

custom:
  dotenv: ${file(./dotenv_loader.js)}

provider:
  name: aws
  deploymentMethod: direct
  runtime: python3.11
  region: eu-west-1
  versionFunctions: false
  architecture: "x86_64"
  environment:
    POWERTOOLS_SERVICE_NAME: ${self:service}
    STAGE: ${opt:stage}
  logs:
    httpApi: true
  httpApi:
    payload: "2.0"
    disableDefaultEndpoint: false
    cors:
      allowCredentials: true
      maxAge: 300
      allowedOrigins:
        - ${self:custom.dotenv.CORS_ALLOWED_ORIGIN}
    authorizers:
      jwtAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl: ${self:custom.dotenv.OIDC_JWT_ISSUER_URL}
        audience:
          - ${self:custom.dotenv.OIDC_CLIENT_ID}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - iot:SearchIndex
          Resource:
            - !Sub arn:aws:iot:${self:custom.dotenv.FLEET_INDEX_IOT_REGION_NAME}:${AWS::AccountId}:index/AWS_Things
        - Effect: Allow
          Action:
            - dynamodb:BatchGetItem
            - dynamodb:ConditionCheckItem
            - dynamodb:Get*
            - dynamodb:Scan
            - dynamodb:Query
            - dynamodb:List*
            - dynamodb:Describe*
          Resource:
            - !Sub arn:aws:dynamodb:${self:custom.dotenv.DEVICE_LEDGER_TABLE_REGION}:${AWS::AccountId}:table/${self:custom.dotenv.DEVICE_LEDGER_TABLE_NAME}
        - Effect: Allow
          Action:
            - s3:Get*
            - s3:List*
          Resource:
            - arn:aws:s3:::${self:custom.dotenv.STREAM_DATA_BUCKET_NAME}
            - arn:aws:s3:::${self:custom.dotenv.STREAM_DATA_BUCKET_NAME}/*
        - Effect: Allow
          Action:
            - sns:*
          Resource:
            - ${self:custom.dotenv.DEVICES_ALARMS_SRC_SNS_TOPIC_ARN}
            - ${self:custom.dotenv.DEVICE_ALARMS_DEST_SNS_TOPIC_ARN_PREFIX}*

package:
  individually: true

functions:
  devicesStatusApi:
    handler: streaming_status.app.handler
    description: data streaming platform devices status API
    package:
      patterns:
        - "!**"
        - streaming_status/**
    environment: ${self:custom.dotenv}
    layers:
      # depends on the architecture
      - arn:aws:lambda:${aws:region}:017000801446:layer:AWSLambdaPowertoolsPythonV2:46
    events:
      - httpApi:
          authorizer:
            name: jwtAuthorizer
          path: /api/{proxy+}
          method: "*"
      - httpApi:
          path: /api/{proxy+}
          method: OPTIONS

  devicesAlarmsRouter:
    # TODO separate requirements file.
    handler: alarms_router.handler.route_alarm_notification
    description: SNS devices alarms notifications router
    package:
      patterns:
        - "!**"
        - alarms_router/**
    environment: ${self:custom.dotenv}
    layers:
      # depends on the architecture
      - arn:aws:lambda:${aws:region}:017000801446:layer:AWSLambdaPowertoolsPythonV2:46
    events:
      - sns:
          arn: ${self:custom.dotenv.DEVICES_ALARMS_SRC_SNS_TOPIC_ARN}

plugins:
  - serverless-python-requirements
  - serverless-offline
